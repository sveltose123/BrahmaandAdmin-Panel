{"version":3,"sources":["views/apps/brahmaand/registeruser/RegisterUserList.js"],"names":["RegisterUserList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","script_name","script_type","value","status","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","id","console","log","this","sm","col-sm-6","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/194.1050fc87.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Row, Card, CardBody, Input, Button, Col, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, } from \"reactstrap\";\r\n// import axios from \"axios\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\n// import { history } from \"../../../history\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { ChevronDown, Trash2, Edit } from \"react-feather\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport { Route } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nclass RegisterUserList extends React.Component {\r\n    state = {\r\n        rowData: [],\r\n        paginationPageSize: 20,\r\n        currenPageSize: \"\",\r\n        getPageSize: \"\",\r\n        defaultColDef: {\r\n            sortable: true,\r\n            editable: true,\r\n            resizable: true,\r\n            suppressMenu: true,\r\n        },\r\n        columnDefs: [\r\n            {\r\n                headerName: \"S.No\",\r\n                valueGetter: \"node.rowIndex + 1\",\r\n                field: \"node.rowIndex + 1\",\r\n                width: 100,\r\n                filter: true,\r\n                // checkboxSelection: true,\r\n                // headerCheckboxSelectionFilteredOnly: true,\r\n                // headerCheckboxSelection: true,\r\n            },\r\n            {\r\n                headerName: \"Name\",\r\n                field: \"script_name\",\r\n                width: 220,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <span>{params.data.script_name}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Email Id\",\r\n                field: \"script_type\",\r\n                width: 220,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <span>{params.data.script_type}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Password\",\r\n                field: \"script_type\",\r\n                width: 220,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <span>{params.data.script_type}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n\r\n            {\r\n                headerName: \"Status\",\r\n                field: \"status\",\r\n                filter: true,\r\n                width: 220,\r\n                cellRendererFramework: (params) => {\r\n                    return params.value === \"Active\" ? (\r\n                        <div className=\"badge badge-pill badge-success\">\r\n                            {params.data.status}\r\n                        </div>\r\n                    ) : params.value === \"Deactive\" ? (\r\n                        <div className=\"badge badge-pill badge-warning\">\r\n                            {params.data.status}\r\n                        </div>\r\n                    ) : null;\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Actions\",\r\n                field: \"sortorder\",\r\n                width: 200,\r\n                // pinned: window.innerWidth > 992 ? \"right\" : false,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"actions cursor-pointer\">\r\n                            <Route\r\n                                render={({ history }) => (\r\n                                    <Edit\r\n                                        className=\"mr-50\"\r\n                                        size=\"25px\"\r\n                                        color=\"blue\"\r\n                                        onClick={() =>\r\n                                            history.push(`/app/brahmaand/registeruser/editRegisterUser/${params.data._id}`)\r\n                                        }\r\n                                    />\r\n                                )}\r\n                            />\r\n\r\n                            <Trash2\r\n                                className=\"mr-50\"\r\n                                size=\"25px\"\r\n                                color=\"red\"\r\n                                onClick={() => {\r\n                                    let selectedData = this.gridApi.getSelectedRows();\r\n                                    this.runthisfunction(params.data._id);\r\n                                    this.gridApi.updateRowData({ remove: selectedData });\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n        ],\r\n    };\r\n    async componentDidMount() {\r\n        await axiosConfig.get(\"/getScript\").then((response) => {\r\n            let rowData = response.data.data;\r\n            this.setState({ rowData });\r\n        });\r\n    }\r\n    async runthisfunction(id) {\r\n        console.log(id);\r\n        await axiosConfig.get(`/deletescript/${id}`).then((response) => {\r\n            console.log(response);\r\n        });\r\n    }\r\n\r\n    onGridReady = (params) => {\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        this.setState({\r\n            currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n            getPageSize: this.gridApi.paginationGetPageSize(),\r\n            totalPages: this.gridApi.paginationGetTotalPages(),\r\n        });\r\n    };\r\n\r\n    updateSearchQuery = (val) => {\r\n        this.gridApi.setQuickFilter(val);\r\n    };\r\n\r\n    filterSize = (val) => {\r\n        if (this.gridApi) {\r\n            this.gridApi.paginationSetPageSize(Number(val));\r\n            this.setState({\r\n                currenPageSize: val,\r\n                getPageSize: val,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { rowData, columnDefs, defaultColDef } = this.state;\r\n        return (\r\n            <Row className=\"app-user-list\">\r\n                <Col sm=\"12\"></Col>\r\n                <Col sm=\"12\">\r\n                    <Card>\r\n                        <Row className=\"m-2\">\r\n                            <Col>\r\n                                <h1 col-sm-6 className=\"float-left\">\r\n                                    Register User List\r\n                                </h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Col className=\"pt-4\">\r\n                            <Route\r\n                                render={({ history }) => (\r\n                                    <Button\r\n                                        className=\" btn btn-success float-right\"\r\n                                        onClick={() => history.push(\"/app/brahmaand/registeruser/addRegisterUser\")}\r\n                                    >\r\n                                        Add Register User\r\n                                    </Button>\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                        <CardBody className=\"py-0\">\r\n                            {this.state.rowData === null ? null : (\r\n                                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                                        <div className=\"mb-1\">\r\n                                            <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                                                <DropdownToggle tag=\"div\">\r\n                                                    {this.gridApi\r\n                                                        ? this.state.currenPageSize\r\n                                                        : \"\" * this.state.getPageSize -\r\n                                                        (this.state.getPageSize - 1)}{\" \"}\r\n                                                    -{\" \"}\r\n                                                    {this.state.rowData.length -\r\n                                                        this.state.currenPageSize * this.state.getPageSize >\r\n                                                        0\r\n                                                        ? this.state.currenPageSize * this.state.getPageSize\r\n                                                        : this.state.rowData.length}{\" \"}\r\n                                                    of {this.state.rowData.length}\r\n                                                    <ChevronDown className=\"ml-50\" size={15} />\r\n                                                </DropdownToggle>\r\n                                                <DropdownMenu right>\r\n                                                    <DropdownItem\r\n                                                        tag=\"div\"\r\n                                                        onClick={() => this.filterSize(20)}\r\n                                                    >\r\n                                                        20\r\n                                                    </DropdownItem>\r\n                                                    <DropdownItem\r\n                                                        tag=\"div\"\r\n                                                        onClick={() => this.filterSize(50)}\r\n                                                    >\r\n                                                        50\r\n                                                    </DropdownItem>\r\n                                                    <DropdownItem\r\n                                                        tag=\"div\"\r\n                                                        onClick={() => this.filterSize(100)}\r\n                                                    >\r\n                                                        100\r\n                                                    </DropdownItem>\r\n                                                    <DropdownItem\r\n                                                        tag=\"div\"\r\n                                                        onClick={() => this.filterSize(134)}\r\n                                                    >\r\n                                                        134\r\n                                                    </DropdownItem>\r\n                                                </DropdownMenu>\r\n                                            </UncontrolledDropdown>\r\n                                        </div>\r\n                                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                                            <div className=\"table-input mr-1\">\r\n                                                <Input\r\n                                                    placeholder=\"search...\"\r\n                                                    onChange={(e) =>\r\n                                                        this.updateSearchQuery(e.target.value)\r\n                                                    }\r\n                                                    value={this.state.value}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"export-btn\">\r\n                                                <Button.Ripple\r\n                                                    color=\"primary\"\r\n                                                    onClick={() => this.gridApi.exportDataAsCsv()}\r\n                                                >\r\n                                                    Export as CSV\r\n                                                </Button.Ripple>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <ContextLayout.Consumer>\r\n                                        {(context) => (\r\n                                            <AgGridReact\r\n                                                gridOptions={{}}\r\n                                                rowSelection=\"multiple\"\r\n                                                defaultColDef={defaultColDef}\r\n                                                columnDefs={columnDefs}\r\n                                                rowData={rowData}\r\n                                                onGridReady={this.onGridReady}\r\n                                                colResizeDefault={\"shift\"}\r\n                                                animateRows={true}\r\n                                                floatingFilter={false}\r\n                                                pagination={true}\r\n                                                paginationPageSize={this.state.paginationPageSize}\r\n                                                pivotPanelShow=\"always\"\r\n                                                enableRtl={context.state.direction === \"rtl\"}\r\n                                            />\r\n                                        )}\r\n                                    </ContextLayout.Consumer>\r\n                                </div>\r\n                            )}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nexport default RegisterUserList;\r\n"],"sourceRoot":""}