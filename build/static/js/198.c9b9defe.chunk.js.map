{"version":3,"sources":["views/apps/brahmaand/resource/ResourceList.js"],"names":["ResourceList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","script_type","fnoindex_scrpt_name","scriptName","fnoequty_scrpt_name","cash_scrpt_name","type","call_type","active_value","active_value2","SL","FT1_type","FT2_type","FT3_type","t1_type","t2_type","t3_type","t4_type","trl_type","t5_type","tradeStatus","sl_type","pinned","window","innerWidth","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","console","log","id","error","this","sm","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/198.c9b9defe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, Input, Row, Col, Button, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, } from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass ResourceList extends React.Component {\r\n    state = {\r\n        rowData: [],\r\n        paginationPageSize: 20,\r\n        currenPageSize: \"\",\r\n        getPageSize: \"\",\r\n        defaultColDef: {\r\n            sortable: true,\r\n            editable: true,\r\n            resizable: true,\r\n            suppressMenu: true,\r\n        },\r\n\r\n        columnDefs: [\r\n            {\r\n                headerName: \"S.No\",\r\n                valueGetter: \"node.rowIndex + 1\",\r\n                field: \"node.rowIndex + 1\",\r\n                width: 100,\r\n                filter: true,\r\n                // checkboxSelection: true,\r\n                // headerCheckboxSelectionFilteredOnly: true,\r\n                // headerCheckboxSelection: true,\r\n            },\r\n\r\n            {\r\n                headerName: \"Link\",\r\n                field: \"script_type\",\r\n                width: 140,\r\n                // pinned: window.innerWidth > 992 ? \"left\" : false,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex  align-items-center cursor-pointer\">\r\n                            <span>{params.data.script_type}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n\r\n            {\r\n                headerName: \"Type\",\r\n                field: \"scriptName\",\r\n                width: 140,\r\n                // pinned: window.innerWidth > 992 ? \"left\" : false,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex  align-items-center cursor-pointer\">\r\n                            <span>{params.data.fnoindex_scrpt_name?.scriptName}</span>\r\n                            <span>{params.data.fnoequty_scrpt_name?.scriptName}</span>\r\n                            <span>{params.data.cash_scrpt_name?.scriptName}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n\r\n            // {\r\n            //   headerName: \"Expiry Date\",\r\n            //   field: \"expDate\",\r\n            //   width: 140,\r\n            //   // pinned: window.innerWidth > 992 ? \"left\" : false,\r\n            //   cellRendererFramework: (params) => {\r\n            //     return (\r\n            //       <div className=\"d-flex  align-items-center cursor-pointer\">\r\n            //         <span>{params.data.expiryDate?.expDate}</span>\r\n            //       </div>\r\n            //     );\r\n            //   },\r\n            // },\r\n            {\r\n                headerName: \"Level\",\r\n                field: \"type\",\r\n                width: 140,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <span>{params.data.type}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Language\",\r\n                field: \"call_type\",\r\n                width: 140,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <span>{params.data.call_type}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Topic\",\r\n                field: \"active_value\",\r\n                width: 140,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <span>{params.data.active_value}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Descripition\",\r\n                field: \"active_value2\",\r\n                width: 140,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <span>{params.data.active_value2}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \" Optional\",\r\n                field: \"SL\",\r\n                width: 140,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <span>{params.data.SL}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            // {\r\n            //   headerName: \"Trial\",\r\n            //   field: \"trl\",\r\n            //   width: 140,\r\n            //   cellRendererFramework: (params) => {\r\n            //     return (\r\n            //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n            //         <span>{params.data.trl}</span>\r\n            //       </div>\r\n            //     );\r\n            //   },\r\n            // },\r\n            //  {\r\n            //   headerName: \"T₹ 1\",\r\n            //   field: \"T1\",\r\n            //   width: 140,\r\n            //   cellRendererFramework: (params) => {\r\n            //     return (\r\n            //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n            //         <span>{params.data.T1}</span>\r\n            //       </div>\r\n            //     );\r\n            //   },\r\n            // },\r\n\r\n            // {\r\n            //   headerName: \"Number Of Lots\",\r\n            //   field: \"no_of_lots\",\r\n            //   width: 140,\r\n            //   cellRendererFramework: (params) => {\r\n            //     return (\r\n            //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n            //         <span>{params.data.no_of_lots}</span>\r\n            //       </div>\r\n            //     );\r\n            //   },\r\n            // },\r\n            // {\r\n            //   headerName: \"SL Type\",\r\n            //   field: \"sl_type\",\r\n            //   filter: true,\r\n            //   width: 150,\r\n            //   cellRendererFramework: (params) => {\r\n            //     return params.value === \"true\" ? (\r\n            //       <div className=\"badge badge-pill badge-success\">\r\n            //         {params.data.sl_type}\r\n            //       </div>\r\n            //     ) : params.value === \"false\" ? (\r\n            //       <div className=\"badge badge-pill badge-warning\">\r\n            //         {params.data.sl_type}\r\n            //       </div>\r\n            //     ) : null;\r\n            //   },\r\n            // },\r\n            // {\r\n            //   headerName: \"Trial Type\",\r\n            //   field: \"trl_type\",\r\n            //   filter: true,\r\n            //   width: 150,\r\n            //   cellRendererFramework: (params) => {\r\n            //     return params.value === \"true\" ? (\r\n            //       <div className=\"badge badge-pill badge-success\">\r\n            //         {params.data.trl_type}\r\n            //       </div>\r\n            //     ) : params.value === \"false\" ? (\r\n            //       <div className=\"badge badge-pill badge-warning\">\r\n            //         {params.data.trl_type}\r\n            //       </div>\r\n            //     ) : null;\r\n            //   },\r\n            // },\r\n            // {\r\n            //   headerName: \"FT1 Type\",\r\n            //   field: \"FT1_type\",\r\n            //   filter: true,\r\n            //   width: 150,\r\n            //   cellRendererFramework: (params) => {\r\n            //     return params.value === \"true\" ? (\r\n            //       <div className=\"badge badge-pill badge-success\">\r\n            //         {params.data.FT1_type}\r\n            //       </div>\r\n            //     ) : params.value === \"false\" ? (\r\n            //       <div className=\"badge badge-pill badge-warning\">\r\n            //         {params.data.FT1_type}\r\n            //       </div>\r\n            //     ) : null;\r\n            //   },\r\n            // },\r\n            //  {\r\n            //   headerName: \"T1 Type\",\r\n            //   field: \"t1_type\",\r\n            //   filter: true,\r\n            //   width: 150,\r\n            //   cellRendererFramework: (params) => {\r\n            //     return params.value === \"true\" ? (\r\n            //       <div className=\"badge badge-pill badge-success\">\r\n            //         {params.data.t1_type}\r\n            //       </div>\r\n            //     ) : params.value === \"false\" ? (\r\n            //       <div className=\"badge badge-pill badge-warning\">\r\n            //         {params.data.t1_type}\r\n            //       </div>\r\n            //     ) : null;\r\n            //   },\r\n            // },\r\n            // {\r\n            //   headerName: \"T2 Type\",\r\n            //   field: \"t2_type\",\r\n            //   filter: true,\r\n            //   width: 150,\r\n            //   cellRendererFramework: (params) => {\r\n            //     return params.value === \"true\" ? (\r\n            //       <div className=\"badge badge-pill badge-success\">\r\n            //         {params.data.t2_type}\r\n            //       </div>\r\n            //     ) : params.value === \"false\" ? (\r\n            //       <div className=\"badge badge-pill badge-warning\">\r\n            //         {params.data.t2_type}\r\n            //       </div>\r\n            //     ) : null;\r\n            //   },\r\n            // },\r\n            // {\r\n            //   headerName: \"T3 Type\",\r\n            //   field: \"t3_type\",\r\n            //   filter: true,\r\n            //   width: 150,\r\n            //   cellRendererFramework: (params) => {\r\n            //     return params.value === \"true\" ? (\r\n            //       <div className=\"badge badge-pill badge-success\">\r\n            //         {params.data.t3_type}\r\n            //       </div>\r\n            //     ) : params.value === \"false\" ? (\r\n            //       <div className=\"badge badge-pill badge-warning\">\r\n            //         {params.data.t3_type}\r\n            //       </div>\r\n            //     ) : null;\r\n            //   },\r\n            // },\r\n            // {\r\n            //   headerName: \"T4 Type\",\r\n            //   field: \"t4_type\",\r\n            //   filter: true,\r\n            //   width: 150,\r\n            //   cellRendererFramework: (params) => {\r\n            //     return params.value === \"true\" ? (\r\n            //       <div className=\"badge badge-pill badge-success\">\r\n            //         {params.data.t4_type}\r\n            //       </div>\r\n            //     ) : params.value === \"false\" ? (\r\n            //       <div className=\"badge badge-pill badge-warning\">\r\n            //         {params.data.t4_type}\r\n            //       </div>\r\n            //     ) : null;\r\n            //   },\r\n            // },\r\n            {\r\n                headerName: \"status \",\r\n                field: \"tradeStatus\",\r\n                filter: true,\r\n                width: 150,\r\n                cellRendererFramework: (params) => {\r\n                    // return params.value === \"Closed\" ? (\r\n                    //   <div className=\"badge badge-pill badge-success\">\r\n                    //     {params.data.tradeStatus}\r\n                    //   </div>\r\n                    // ) : params.value === \"Closed\" ? (\r\n                    //   <div className=\"badge badge-pill badge-danger\">\r\n                    //     {params.data.tradeStatus}\r\n                    //   </div>\r\n                    // ) : null;\r\n\r\n                    return (params?.data?.FT1_type == \"true\" || params?.data?.FT2_type == \"true\" || params?.data?.FT3_type == \"true\" || params?.data?.t1_type == \"true\" || params?.data?.t2_type == \"true\" || params?.data?.t3_type == \"true\" || params?.data?.t4_type == \"true\" || params?.data?.trl_type == \"true\" || params?.data?.t5_type == \"true\" ? (\r\n                        <div className=\"badge badge-pill badge-success\">\r\n                            {params?.data?.tradeStatus}\r\n                        </div>\r\n                    ) : params?.data?.sl_type == \"true\" ? (\r\n                        <div className=\"badge badge-pill badge-danger\">\r\n                            {params?.data?.tradeStatus}\r\n                        </div>\r\n                    ) : null);\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Actions\",\r\n                field: \"sortorder\",\r\n                // field: \"transactions\",\r\n                width: 150,\r\n                pinned: window.innerWidth > 992 ? \"right\" : false,\r\n\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"actions cursor-pointer\">\r\n                            <Route\r\n                                render={({ history }) => (\r\n                                    <Edit\r\n                                        className=\"mr-50\"\r\n                                        size=\"25px\"\r\n                                        color=\"blue\"\r\n                                        onClick={() =>\r\n                                            history.push(`/app/brahmaand/resource/editresource/${params.data._id}`)\r\n                                        }\r\n                                    />\r\n                                )}\r\n                            />\r\n\r\n                            <Trash2\r\n                                size={20}\r\n                                color=\"red\"\r\n                                onClick={() => {\r\n                                    let selectedData = this.gridApi.getSelectedRows();\r\n                                    this.runthisfunction(params.data._id);\r\n                                    this.gridApi.updateRowData({ remove: selectedData });\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    async componentDidMount() {\r\n        await axiosConfig.get(`/tradelist`).then((response) => {\r\n            const rowData = response.data.data;\r\n            console.log(rowData);\r\n            this.setState({ rowData });\r\n        });\r\n    }\r\n    async runthisfunction(id) {\r\n        console.log(id);\r\n        await axiosConfig.get(`/dlt_alltrade/${id}`).then(\r\n            (response) => {\r\n                console.log(response);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n    onGridReady = (params) => {\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        this.setState({\r\n            currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n            getPageSize: this.gridApi.paginationGetPageSize(),\r\n            totalPages: this.gridApi.paginationGetTotalPages(),\r\n        });\r\n    };\r\n\r\n    updateSearchQuery = (val) => {\r\n        this.gridApi.setQuickFilter(val);\r\n    };\r\n\r\n    filterSize = (val) => {\r\n        if (this.gridApi) {\r\n            this.gridApi.paginationSetPageSize(Number(val));\r\n            this.setState({\r\n                currenPageSize: val,\r\n                getPageSize: val,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { rowData, columnDefs, defaultColDef } = this.state;\r\n        return (\r\n            console.log(rowData),\r\n            (\r\n                <Row className=\"app-user-list\">\r\n                    <Col sm=\"12\"></Col>\r\n                    <Col sm=\"12\">\r\n                        <Card>\r\n                            <Row className=\"m-2\">\r\n                                <Col>\r\n                                    <h1 sm=\"6\" className=\"float-left\">\r\n                                        Resources List\r\n                                    </h1>\r\n                                </Col>\r\n                                <Col className=\"pt-4\">\r\n                                    <Route\r\n                                        render={({ history }) => (\r\n                                            <Button\r\n                                                className=\" btn btn-success float-right\"\r\n                                                onClick={() => history.push(\"/app/brahmaand/resource/addresource\")}\r\n                                            >\r\n                                                Add\r\n                                            </Button>\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <CardBody>\r\n                                {this.state.rowData === null ? null : (\r\n                                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                                        <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                                            <div className=\"mb-1\">\r\n                                                <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                                                    <DropdownToggle tag=\"div\">\r\n                                                        {this.gridApi\r\n                                                            ? this.state.currenPageSize\r\n                                                            : \"\" * this.state.getPageSize -\r\n                                                            (this.state.getPageSize - 1)}{\" \"}\r\n                                                        -{\" \"}\r\n                                                        {this.state.rowData.length -\r\n                                                            this.state.currenPageSize *\r\n                                                            this.state.getPageSize >\r\n                                                            0\r\n                                                            ? this.state.currenPageSize *\r\n                                                            this.state.getPageSize\r\n                                                            : this.state.rowData.length}{\" \"}\r\n                                                        of {this.state.rowData.length}\r\n                                                        <ChevronDown className=\"ml-50\" size={15} />\r\n                                                    </DropdownToggle>\r\n                                                    <DropdownMenu right>\r\n                                                        <DropdownItem\r\n                                                            tag=\"div\"\r\n                                                            onClick={() => this.filterSize(20)}\r\n                                                        >\r\n                                                            20\r\n                                                        </DropdownItem>\r\n                                                        <DropdownItem\r\n                                                            tag=\"div\"\r\n                                                            onClick={() => this.filterSize(50)}\r\n                                                        >\r\n                                                            50\r\n                                                        </DropdownItem>\r\n                                                        <DropdownItem\r\n                                                            tag=\"div\"\r\n                                                            onClick={() => this.filterSize(100)}\r\n                                                        >\r\n                                                            100\r\n                                                        </DropdownItem>\r\n                                                        <DropdownItem\r\n                                                            tag=\"div\"\r\n                                                            onClick={() => this.filterSize(134)}\r\n                                                        >\r\n                                                            134\r\n                                                        </DropdownItem>\r\n                                                    </DropdownMenu>\r\n                                                </UncontrolledDropdown>\r\n                                            </div>\r\n                                            <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                                                <div className=\"table-input mr-1\">\r\n                                                    <Input\r\n                                                        placeholder=\"search...\"\r\n                                                        onChange={(e) =>\r\n                                                            this.updateSearchQuery(e.target.value)\r\n                                                        }\r\n                                                        value={this.state.value}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"export-btn\">\r\n                                                    <Button.Ripple\r\n                                                        color=\"primary\"\r\n                                                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                                                    >\r\n                                                        Export as CSV\r\n                                                    </Button.Ripple>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <ContextLayout.Consumer>\r\n                                            {(context) => (\r\n                                                <AgGridReact\r\n                                                    gridOptions={{}}\r\n                                                    rowSelection=\"multiple\"\r\n                                                    defaultColDef={defaultColDef}\r\n                                                    columnDefs={columnDefs}\r\n                                                    rowData={rowData}\r\n                                                    onGridReady={this.onGridReady}\r\n                                                    colResizeDefault={\"shift\"}\r\n                                                    animateRows={true}\r\n                                                    floatingFilter={false}\r\n                                                    pagination={true}\r\n                                                    paginationPageSize={this.state.paginationPageSize}\r\n                                                    pivotPanelShow=\"always\"\r\n                                                    enableRtl={context.state.direction === \"rtl\"}\r\n                                                />\r\n                                            )}\r\n                                        </ContextLayout.Consumer>\r\n                                    </div>\r\n                                )}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row >\r\n            )\r\n        );\r\n    }\r\n}\r\nexport default ResourceList;\r\n"],"sourceRoot":""}