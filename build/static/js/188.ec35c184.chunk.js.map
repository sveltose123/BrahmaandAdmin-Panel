{"version":3,"sources":["views/apps/brahmaand/works/EditWorks.js"],"names":["EditWorks","props","onEditorStateChange","editorState","setState","desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler","e","target","name","value","changeHandler1","status","submitHandler","preventDefault","id","match","params","axiosConfig","post","state","then","response","console","log","swal","history","push","catch","error","EditorState","createEmpty","sm","listTag","href","tag","active","className","col-sm-6","render","onClick","onSubmit","this","toolbarClassName","wrapperClassName","editorClassName","color","Component"],"mappings":"8aAaqBA,E,kDAEjB,WAAaC,GAAQ,IAAD,8BAChB,cAAMA,IAMVC,oBAAsB,SAACC,GACnB,EAAKC,SAAS,CACVD,cACAE,KAAMC,IAAYC,uBAAaJ,EAAYK,yBAV/B,EAcpBC,cAAgB,SAACC,GACb,EAAKN,SAAL,eAAiBM,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAf1B,EAkBpBC,eAAiB,SAACJ,GACd,EAAKN,SAAS,CAAEW,OAAQL,EAAEC,OAAOE,SAnBjB,EAqBpBG,cAAgB,SAACN,GACbA,EAAEO,iBACF,IAAMC,EAAO,EAAKjB,MAAMkB,MAAMC,OAAxBF,GACNG,IACKC,KADL,gCACmCJ,GAAM,EAAKK,OACzCC,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACZG,IAAK,WAAY,yBAA0B,WAC3C,EAAK3B,MAAM4B,QAAQC,KAAK,iCAE3BC,OAAM,SAACC,GACJN,QAAQC,IAAIK,OA9BpB,EAAKT,MAAQ,CACTlB,KAAM,GACNF,YAAa8B,cAAYC,eAJb,E,0CAoCpB,WACI,OACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAG,MACJ,6BACI,kBAAC,IAAD,CAAYC,QAAQ,OAChB,kBAAC,IAAD,CAAgBC,KAAK,sBAAsBC,IAAI,KAA/C,QAGA,kBAAC,IAAD,CAAgBD,KAAK,6BAA6BC,IAAI,KAAtD,iBAGA,kBAAC,IAAD,CAAgBC,QAAM,GAAtB,mBAMhB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,UAAU,OACX,kBAAC,IAAD,KACI,wBAAIC,YAAA,EAASD,UAAU,cAAvB,eAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIE,OAAQ,gBAAGb,EAAH,EAAGA,QAAH,OACJ,kBAAC,IAAD,CACIW,UAAU,8BACVG,QAAS,kBAAMd,EAAQC,KAAK,gCAFhC,aAUhB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMc,SAAUC,KAAK7B,eACjB,kBAAC,SAAD,CACI8B,iBAAiB,wBACjBC,iBAAiB,eACjBC,gBAAgB,cAChB7C,YAAa0C,KAAKtB,MAAMpB,YACxBD,oBAAqB2C,KAAK3C,sBA8B9B,6BACA,kBAAC,IAAD,CAAQ+C,MAAM,WAAd,gC,GAnHWC,c","file":"static/js/188.ec35c184.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Card, CardBody, Col, Row, Form, Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\n// import { history } from \"../../../history\";\r\nimport swal from 'sweetalert';\r\n\r\nexport default class EditWorks extends Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            desc: \"\",\r\n            editorState: EditorState.createEmpty(),\r\n        };\r\n    }\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n            desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n        });\r\n    };\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    changeHandler1 = (e) => {\r\n        this.setState({ status: e.target.value });\r\n    };\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let { id } = this.props.match.params;\r\n        axiosConfig\r\n            .post(`/admin/edit_term_cond/${id}`, this.state)\r\n            .then((response) => {\r\n                console.log(response);\r\n                swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n                this.props.history.push(\"/app/brahmaand/works/works\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col sm=\"12\">\r\n                        <div>\r\n                            <Breadcrumb listTag=\"div\">\r\n                                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                                    Home\r\n                                </BreadcrumbItem>\r\n                                <BreadcrumbItem href=\"/app/brahmaand/works/works\" tag=\"a\">\r\n                                    How Its Works\r\n                                </BreadcrumbItem>\r\n                                <BreadcrumbItem active>Edit Works </BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Card>\r\n                    <Row className=\"m-2\">\r\n                        <Col>\r\n                            <h1 col-sm-6 className=\"float-left\">\r\n                                Edit Works\r\n                            </h1>\r\n                        </Col>\r\n                        <Col>\r\n                            <Route\r\n                                render={({ history }) => (\r\n                                    <Button\r\n                                        className=\" btn btn-danger float-right\"\r\n                                        onClick={() => history.push(\"/app/brahmaand/works/works\")}\r\n                                    >\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <CardBody>\r\n                        <Form onSubmit={this.submitHandler}>\r\n                            <Editor\r\n                                toolbarClassName=\"demo-toolbar-absolute\"\r\n                                wrapperClassName=\"demo-wrapper\"\r\n                                editorClassName=\"demo-editor\"\r\n                                editorState={this.state.editorState}\r\n                                onEditorStateChange={this.onEditorStateChange}\r\n\r\n\r\n                            // toolbar={{\r\n                            //   options: [\"inline\", \"blockType\", \"fontSize\", \"fontFamily\"],\r\n                            //   inline: {\r\n                            //     options: [\r\n                            //       \"bold\",\r\n                            //       \"italic\",\r\n                            //       \"underline\",\r\n                            //       \"strikethrough\",\r\n                            //       \"monospace\",],\r\n                            //     bold: { className: \"bordered-option-classname\" },\r\n                            //     italic: { className: \"bordered-option-classname\" },\r\n                            //     underline: { className: \"bordered-option-classname\" },\r\n                            //     strikethrough: { className: \"bordered-option-classname\" },\r\n                            //     code: { className: \"bordered-option-classname\" },\r\n                            //   },\r\n                            //   blockType: {\r\n                            //     className: \"bordered-option-classname\",\r\n                            //   },\r\n                            //   fontSize: {\r\n                            //     className: \"bordered-option-classname\",\r\n                            //   },\r\n                            //   fontFamily: {\r\n                            //     className: \"bordered-option-classname\",\r\n                            //   },\r\n                            // }}\r\n                            />\r\n\r\n                            <br />\r\n                            <Button color=\"primary\">Update How Its Works</Button>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}