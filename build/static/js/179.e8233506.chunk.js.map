{"version":3,"sources":["views/apps/brahmaand/privacypolicy/EditPrivacyPolicy.js","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["EditPrivacyPolicy","props","onEditorStateChange","editorState","response","setState","desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler","e","target","name","value","changeHandler1","status","submitHandler","preventDefault","id","match","params","axiosConfig","post","state","then","console","log","swal","history","push","catch","error","this","get","data","sm","listTag","href","tag","active","className","col-sm-6","render","onClick","onSubmit","lg","md","toolbarClassName","wrapperClassName","editorClassName","dangerouslySetInnerHTML","__html","Ripple","color","type","Component","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","children","node","hidden","check","for","tagPropType","cssModule","object","xs","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Label","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","mapToCssModules","classNames","classes","length","React","createElement","_extends","row","inline","disabled","FormGroup"],"mappings":"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","file":"static/js/179.e8233506.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Card, CardBody, Row, Col, Form, Label, Input, FormGroup, Button, Breadcrumb, CustomInput, BreadcrumbItem, } from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nexport default class EditPrivacyPolicy extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            desc: \"\",\r\n\r\n\r\n        };\r\n    }\r\n    onEditorStateChange = (editorState, response) => {\r\n        this.setState({\r\n            editorState,\r\n            desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        let { id } = this.props.match.params;\r\n        axiosConfig\r\n            .get(`/admin/getonePrivcyPlcy/${id}`, {\r\n            })\r\n            .then((response) => {\r\n                console.log(response);\r\n                this.setState({\r\n                    desc: response.data.data.desc,\r\n\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    changeHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    changeHandler1 = (e) => {\r\n        this.setState({ status: e.target.value });\r\n    };\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let { id } = this.props.match.params;\r\n        axiosConfig\r\n            .post(`/admin/editPrivcyPlcy/${id}`, this.state)\r\n            .then((response) => {\r\n                console.log(response);\r\n                swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n                this.props.history.push(\"/app/brahmaand/privacypolicy/privacyPolicy\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col sm=\"12\">\r\n                        <div>\r\n                            <Breadcrumb listTag=\"div\">\r\n                                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                                    Home\r\n                                </BreadcrumbItem>\r\n                                <BreadcrumbItem href=\"/app/brahmaand/privacypolicy/privacyPolicy\" tag=\"a\">\r\n                                    PrivacyPolicy\r\n                                </BreadcrumbItem>\r\n                                <BreadcrumbItem active>Edit PrivacyPolicy </BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Card>\r\n                    <Row className=\"m-2\">\r\n                        <Col>\r\n                            <h1 col-sm-6 className=\"float-left\">\r\n                                Edit PrivacyPolicy\r\n                            </h1>\r\n                        </Col>\r\n                        <Col>\r\n                            <Route\r\n                                render={({ history }) => (\r\n                                    <Button\r\n                                        className=\" btn btn-danger float-right\"\r\n                                        onClick={() => history.push(\"/app/brahmaand/privacypolicy/privacyPolicy\")}\r\n                                    >\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <CardBody>\r\n                        <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n                            <Row>\r\n                                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                                    <FormGroup>\r\n                                        <Label>Descripition</Label>\r\n                                        <Editor\r\n                                            toolbarClassName=\"demo-toolbar-absolute\"\r\n                                            wrapperClassName=\"demo-wrapper\"\r\n                                            editorClassName=\"demo-editor\"\r\n                                            editorState={this.state.editorState}\r\n                                            onEditorStateChange={this.onEditorStateChange}\r\n                                            dangerouslySetInnerHTML={{ __html: this.state.desc }}\r\n                                        // toolbar={{\r\n                                        //     options: [\r\n                                        //         \"inline\",\r\n                                        //         \"blockType\",\r\n                                        //         \"fontSize\",\r\n                                        //         \"fontFamily\",\r\n                                        //     ],\r\n                                        //     inline: {\r\n                                        //         options: [\r\n                                        //             \"bold\",\r\n                                        //             \"italic\",\r\n                                        //             \"underline\",\r\n                                        //             \"strikethrough\",\r\n                                        //             \"monospace\",\r\n                                        //         ],\r\n                                        //         bold: { className: \"bordered-option-classname\" },\r\n                                        //         italic: { className: \"bordered-option-classname\" },\r\n                                        //         underline: { className: \"bordered-option-classname\" },\r\n                                        //         strikethrough: {\r\n                                        //             className: \"bordered-option-classname\",\r\n                                        //         },\r\n                                        //         code: { className: \"bordered-option-classname\" },\r\n                                        //     },\r\n                                        //     blockType: {\r\n                                        //         className: \"bordered-option-classname\",\r\n                                        //     },\r\n                                        //     fontSize: {\r\n                                        //         className: \"bordered-option-classname\",\r\n                                        //     },\r\n                                        //     fontFamily: {\r\n                                        //         className: \"bordered-option-classname\",\r\n                                        //     },\r\n                                        // }}\r\n\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Row>\r\n                                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                                    <Button.Ripple\r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                        className=\"mr-1 mb-1\"\r\n                                    >\r\n                                        Update\r\n                                    </Button.Ripple>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}