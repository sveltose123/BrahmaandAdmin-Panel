{"version":3,"sources":["views/apps/brahmaand/resource/AddResource.js"],"names":["AddResource","useState","link","setLink","category","setCategory","sub_category","setSub_category","type","setType","format","setFormat","topics","setTopics","desc","setDesc","resTitle","setResTitle","creatorName","setCreatorName","comment","setComment","selectedLang","categoryT","setCategoryT","sub_categoryT","setSub_categoryT","yrN","setYrN","langL","setLangL","yrName","setYrName","cat_img","setCat_img","EditorState","createEmpty","editorState","setEditorState","sellang","setSellang","conimg","setConimg","imageToBase64","then","response","console","log","catch","error","submitHandler","e","preventDefault","axios","post","language","relYear","img","data","swal","picturePreview","useEffect","listbycategorydata","getallcategorydata","getallyear","getalllang","undefined","get","axiosConfig","sm","listTag","href","tag","active","className","col-sm-6","render","history","onClick","push","onSubmit","lg","md","name","placeholder","value","onChange","target","map","allCategory","_id","key","title","allSubCategory","event","files","options","onSelect","selectedList","selectedItem","selectItem1","i","length","onRemove","removedItem","displayValue","style","paddingLeft","paddingRight","marginRight","marginTop","height","backgroundColor","borderRadius","border","allYear","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","color"],"mappings":"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","file":"static/js/182.e18c9a5c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  CustomInput,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { FiArrowDown } from \"react-icons/fi\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport axios from \"axios\";\r\nimport imageToBase64 from \"image-to-base64/browser\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionItemButton,\r\n  AccordionItemPanel,\r\n} from \"react-accessible-accordion\";\r\n\r\nfunction AddResource() {\r\n  const [link, setLink] = useState([]);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [sub_category, setSub_category] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [format, setFormat] = useState(\"\");\r\n  const [topics, setTopics] = useState([]);\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [resTitle, setResTitle] = useState(\"\");\r\n  const [creatorName, setCreatorName] = useState(\"\");\r\n  const [relYear, setRelYear] = useState([]);\r\n  const [comment, setComment] = useState(\"\");\r\n  // const [selectedFile, setSelectedFile] = useState(\"\");\r\n  const [selectedLang, setSelectedLang] = useState([]);\r\n  const [categoryT, setCategoryT] = useState([]);\r\n  const [sub_categoryT, setSub_categoryT] = useState([]);\r\n  const [yrN, setYrN] = useState([]);\r\n  const [langL, setLangL] = useState([]);\r\n  const [yrName, setYrName] = useState([]);\r\n  const [cat_img, setCat_img] = useState({});\r\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n  const [sellang, setSellang] = useState();\r\n  const [conimg, setConimg] = useState(\"\");\r\n  const onSelect = (selectedList, selectedItem) => {\r\n    console.log(selectedList);\r\n    var selectItem1 = [];\r\n\r\n    for (var i = 0; i < selectedList.length; i++) {\r\n      selectItem1.push(selectedList[i]._id);\r\n    }\r\n    console.log(\"aaaa\", selectItem1);\r\n    setSellang(selectItem1);\r\n    // console.log(sellang);\r\n  };\r\n\r\n  const onEditorStateChange = (editorState) => {\r\n    // editorState.preventDefault();\r\n    setEditorState(editorState);\r\n\r\n    setDesc(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n  };\r\n  // console.log(desc);\r\n  imageToBase64(cat_img) // Path to the image\r\n    .then((response) => {\r\n      setConimg(response); // \"cGF0aC90by9maWxlLmpwZw==\"\r\n      console.log(response);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error); // Logs an error if there was one\r\n    });\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(\r\n      \"all data\",\r\n      link,\r\n      category,\r\n      sub_category,\r\n      type,\r\n      creatorName,\r\n      topics,\r\n      selectedLang,\r\n      yrName,\r\n      format,\r\n      desc,\r\n      comment,\r\n      conimg,\r\n      sellang,\r\n      desc\r\n    );\r\n\r\n    axios\r\n      .post(`http://3.7.173.138:9000/admin/admin_Sub_resrc`, {\r\n        link: link,\r\n        category: category,\r\n        sub_category: sub_category,\r\n        type: type,\r\n        format: format,\r\n        language: sellang,\r\n        topics: topics,\r\n        desc: desc,\r\n        resTitle: resTitle,\r\n        creatorName: creatorName,\r\n        relYear: yrName,\r\n        comment: comment,\r\n        img: conimg,\r\n      })\r\n\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        swal(\"Success!\", \"Submitted SuccessFully!\", \"success\");\r\n        // history.push(\"/app/brahmaand/resource/resourceList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  function onRemove(selectedList, removedItem) {\r\n    console.log(selectedList);\r\n  }\r\n\r\n  const onChangeHandler = (event) => {\r\n    // setCat_img({\r\n    //   picturePreview: URL.createObjectURL(event.target.files[0]),\r\n\r\n    //   pictureAsFile: event.target.files[0],\r\n    // });\r\n    setCat_img(event.target.files[0]);\r\n  };\r\n\r\n  console.log(cat_img.picturePreview);\r\n  useEffect(() => {\r\n    listbycategorydata();\r\n    getallcategorydata();\r\n    getallyear();\r\n    getalllang();\r\n  }, [category]);\r\n\r\n  const listbycategorydata = () => {\r\n    if (category !== \"\" && category !== undefined && category !== null) {\r\n      axios\r\n        .get(`http://3.7.173.138:9000/admin/listbycategory/${category}`)\r\n        .then((response) => {\r\n          console.log(response);\r\n          setSub_categoryT(response.data.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const getallcategorydata = () => {\r\n    axiosConfig\r\n      .get(\"/admin/getallCategory\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        setCategoryT(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const getallyear = () => {\r\n    axiosConfig\r\n      .get(\"/user/allYear\")\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        setYrN(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getalllang = () => {\r\n    axiosConfig\r\n      .get(\"/user/allLang\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        setLangL(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem\r\n                  href=\"/app/brahmaand/resource/resourceList\"\r\n                  tag=\"a\"\r\n                >\r\n                  Resource List\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active>AddResource</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Resource\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/brahmaand/resource/resourceList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label> Creator Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"creatorName\"\r\n                      placeholder=\"Enter Name\"\r\n                      value={creatorName}\r\n                      onChange={(e) => setCreatorName(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label>Link</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"link\"\r\n                      value={link}\r\n                      onChange={(e) => setLink(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label>Category Name</Label>\r\n                    <CustomInput\r\n                      type=\"select\"\r\n                      name=\"category\"\r\n                      value={category}\r\n                      onChange={(e) => setCategory(e.target.value)}\r\n                    >\r\n                      <option>select Category</option>\r\n                      {categoryT?.map((allCategory) => (\r\n                        <option value={allCategory?._id} key={allCategory?._id}>\r\n                          {allCategory?.title}\r\n                        </option>\r\n                      ))}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label>Sub-Category Name</Label>\r\n                    <CustomInput\r\n                      type=\"select\"\r\n                      name=\"sub_category\"\r\n                      value={sub_category}\r\n                      onChange={(e) => setSub_category(e.target.value)}\r\n                    >\r\n                      <option>select SubCategory</option>\r\n                      {sub_categoryT?.map((allSubCategory) => (\r\n                        <option\r\n                          value={allSubCategory?._id}\r\n                          key={allSubCategory?._id}\r\n                        >\r\n                          {allSubCategory?.title}\r\n                        </option>\r\n                      ))}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label>Type</Label>\r\n                    {/* <CustomInput\r\n                      type=\"select\"\r\n                      onChange={(e) => setType(e.target.value)}\r\n                    >\r\n                      <option>Select Type</option>\r\n                      <option value=\"Free\">Free</option>\r\n                      <option value=\"Paid\">Paid</option>\r\n                    </CustomInput> */}\r\n                    <select\r\n                      onChange={(e) => setType(e.target.value)}\r\n                      value={type}\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option>Select type</option>\r\n                      <option>Free</option>\r\n                      <option>Paid</option>\r\n                    </select>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label>Format</Label>\r\n                    <CustomInput\r\n                      type=\"select\"\r\n                      value={format}\r\n                      onChange={(e) => setFormat(e.target.value)}\r\n                    >\r\n                      <option>Select Format</option>\r\n                      <option value=\"Video\">Video</option>\r\n                      <option value=\"Text\">Text</option>\r\n                      <option value=\"Video & Text\">Video & Text</option>\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Upload Image</Label>\r\n                  <CustomInput\r\n                    type=\"file\"\r\n                    //   multiple\r\n                    onChange={onChangeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2 languageselect\">\r\n                  <FormGroup>\r\n                    <Label>Language</Label>\r\n                    {/* <CustomInput\r\n                      type=\"select\"\r\n                      name=\"language\"\r\n                      value={this.state.language}\r\n                      onChange={this.changeHandler}\r\n                    >\r\n                      <option>select Language</option>\r\n                      {this.state.langL?.map((allLang) => (\r\n                        <option value={allLang?._id} key={allLang?._id}>\r\n                          {allLang?.language}\r\n                        </option>\r\n                      ))}\r\n                    </CustomInput> */}\r\n\r\n                    {/* <Select */}\r\n                    {/* isMulti\r\n                                            type=\"select\"\r\n                                            classNamePrefix=\"select\"\r\n                                            options={this.state.langL}\r\n                                            style={this.style}\r\n                                \r\n                                        /> */}\r\n                    <Multiselect\r\n                      placeholder=\"Select language\"\r\n                      options={langL}\r\n                      // selectedValues={selectedValues}\r\n                      onSelect={onSelect}\r\n                      onRemove={onRemove}\r\n                      displayValue=\"language\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <FormGroup>\r\n                    <Label>Topic</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"topics\"\r\n                      placeholder=\"Enter topic\"\r\n                      value={topics}\r\n                      onChange={(e) => setTopics(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Optional</Label>\r\n                  <Accordion>\r\n                    <AccordionItem>\r\n                      <Col\r\n                        lg=\"12\"\r\n                        className=\"d-flex justify-content-end align-items-end\"\r\n                      >\r\n                        <AccordionItemButton\r\n                          style={{\r\n                            paddingLeft: \"517px\",\r\n                            paddingRight: \"10px\",\r\n                            marginRight: \"-10px\",\r\n                            marginTop: \"1px\",\r\n                            height: \"37px\",\r\n                            backgroundColor: \"white\",\r\n                            borderRadius: \"0.5rem\",\r\n                            border: \"1px solid #d9d9d9\",\r\n                          }}\r\n                        >\r\n                          <FiArrowDown />\r\n                        </AccordionItemButton>\r\n                      </Col>\r\n                      <AccordionItemPanel>\r\n                        <Form>\r\n                          <FormGroup>\r\n                            <Label>Title</Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"resTitle\"\r\n                              value={resTitle}\r\n                              onChange={(e) => setResTitle(e.target.value)}\r\n                            />\r\n                          </FormGroup>\r\n                          <FormGroup>\r\n                            <Label>Release Year</Label>\r\n                            <CustomInput\r\n                              type=\"select\"\r\n                              name=\"relYear\"\r\n                              value={yrName}\r\n                              onChange={(e) => setYrName(e.target.value)}\r\n                            >\r\n                              <option>select Year</option>\r\n                              {yrN?.map((allYear) => (\r\n                                <option value={allYear?._id} key={allYear?._id}>\r\n                                  {allYear?.yrName}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </FormGroup>\r\n                          <FormGroup>\r\n                            <Label>Descripition</Label>\r\n                            <Editor\r\n                              toolbarClassName=\"demo-toolbar-absolute\"\r\n                              wrapperClassName=\"demo-wrapper\"\r\n                              editorClassName=\"demo-editor\"\r\n                              editorState={editorState}\r\n                              onEditorStateChange={onEditorStateChange}\r\n                              // toolbar={{\r\n                              //     options: [\r\n                              //         \"inline\",\r\n                              //         \"blockType\",\r\n                              //         \"fontSize\",\r\n                              //         \"fontFamily\",\r\n\r\n                              //         \"image\",\r\n\r\n                              //     ],\r\n                              //     inline: {\r\n                              //         options: [\r\n                              //             \"bold\",\r\n                              //             \"italic\",\r\n                              //             \"underline\",\r\n                              //             \"strikethrough\",\r\n                              //             \"monospace\",\r\n                              //         ],\r\n                              //         bold: {\r\n                              //             className: \"bordered-option-classname\",\r\n                              //         },\r\n                              //         italic: {\r\n                              //             className: \"bordered-option-classname\",\r\n                              //         },\r\n                              //         underline: {\r\n                              //             className: \"bordered-option-classname\",\r\n                              //         },\r\n                              //         strikethrough: {\r\n                              //             className: \"bordered-option-classname\",\r\n                              //         },\r\n                              //         code: {\r\n                              //             className: \"bordered-option-classname\",\r\n                              //         },\r\n                              //     },\r\n                              //     blockType: {\r\n                              //         className: \"bordered-option-classname\",\r\n                              //     },\r\n                              //     fontSize: {\r\n                              //         className: \"bordered-option-classname\",\r\n                              //     },\r\n                              //     fontFamily: {\r\n                              //         className: \"bordered-option-classname\",\r\n                              //     },\r\n                              //     image: {\r\n                              //         className: \"bordered-option-classname\"\r\n                              //     },\r\n\r\n                              // }}\r\n                            />\r\n                          </FormGroup>\r\n                          <FormGroup>\r\n                            <Label>Comments</Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"comment\"\r\n                              value={comment}\r\n                              onChange={(e) => setComment(e.target.value)}\r\n                            />\r\n                          </FormGroup>\r\n                        </Form>\r\n                      </AccordionItemPanel>\r\n                    </AccordionItem>\r\n                  </Accordion>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Button\r\n                    onClick={submitHandler}\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Add Your Content\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddResource;\r\n"],"sourceRoot":""}