{"version":3,"sources":["views/apps/brahmaand/blogs/BlogList.js"],"names":["Blogs","state","rowData","status","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","cellRendererFramework","params","className","data","blog_title","desc","blog_type","src","blogImg","posted_by","posted_by_img","filter","value","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","console","log","id","error","this","sm","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/215.24367aa6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    Card, CardBody, Input, Row, Col, Button, UncontrolledDropdown, DropdownMenu,\r\n    DropdownItem, DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nclass Blogs extends React.Component {\r\n    state = {\r\n        rowData: [],\r\n        status: \"\",\r\n        paginationPageSize: 20,\r\n        currenPageSize: \"\",\r\n        getPageSize: \"\",\r\n        defaultColDef: {\r\n            sortable: true,\r\n            editable: true,\r\n            resizable: true,\r\n            suppressMenu: true,\r\n        },\r\n\r\n        columnDefs: [\r\n            {\r\n                headerName: \"S.No\",\r\n                valueGetter: \"node.rowIndex + 1\",\r\n                field: \"node.rowIndex + 1\",\r\n                width: 150,\r\n            },\r\n            {\r\n                headerName: \"Title\",\r\n                field: \"blog_title\",\r\n                width: 150,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <span>{params.data.blog_title}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Descripiton\",\r\n                field: \"desc\",\r\n                width: 200,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <span>{params.data.desc}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Blog Type\",\r\n                field: \"blog_type\",\r\n                width: 150,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <span>{params.data.blog_type}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n\r\n            {\r\n                headerName: \" Thumnail Image\",\r\n                field: \"blogImg\",\r\n                width: 120,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <img className=\" d-flex align-items-center cursor-pointer w-50 h-50 rounded\" src={params.data.blogImg} />\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Posted By\",\r\n                field: \"posted_by\",\r\n                width: 120,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"d-flex align-items-center cursor-pointer\">\r\n                            <span>{params.data.posted_by}</span>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Posted Image\",\r\n                field: \"posted_by_img\",\r\n                width: 120,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <img className=\" d-flex align-items-center cursor-pointer w-50 h-50 rounded\" src={params.data.posted_by_img} />\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                headerName: \"Status\",\r\n                field: \"status\",\r\n                filter: true,\r\n                width: 120,\r\n                cellRendererFramework: (params) => {\r\n                    return params.value == \"Active\" ? (\r\n                        <div className=\"badge badge-pill badge-success\">\r\n                            {params.data.status}\r\n                        </div>\r\n                    ) : params.value == \"Deactive\" ? (\r\n                        <div className=\"badge badge-pill badge-warning\">\r\n                            {params.data.status}\r\n                        </div>\r\n                    ) : null;\r\n                },\r\n            },\r\n\r\n            {\r\n                headerName: \"Actions\",\r\n                field: \"sortorder\",\r\n                width: 150,\r\n                cellRendererFramework: (params) => {\r\n                    return (\r\n                        <div className=\"actions cursor-pointer\">\r\n                            <Route\r\n                                render={({ history }) => (\r\n                                    <Edit\r\n                                        className=\"mr-50\"\r\n                                        size=\"25px\"\r\n                                        color=\"blue\"\r\n                                        onClick={() =>\r\n                                            history.push(`/app/brahmaand/blogs/editBlog/${params.data._id}`)\r\n                                        }\r\n                                    />\r\n                                )}\r\n                            />\r\n                            <Trash2\r\n                                size={20}\r\n                                color=\"red\"\r\n                                onClick={() => {\r\n                                    let selectedData = this.gridApi.getSelectedRows();\r\n                                    this.runthisfunction(params.data._id);\r\n                                    this.gridApi.updateRowData({ remove: selectedData });\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    async componentDidMount() {\r\n        await axiosConfig\r\n            .get(\"/admin/getBlog\")\r\n            .then((response) => {\r\n                const rowData = response.data.data;\r\n                console.log(rowData);\r\n                this.setState({ rowData });\r\n            });\r\n    }\r\n    async runthisfunction(id) {\r\n        console.log(id);\r\n        await axiosConfig.get(`/admin/delBlog/${id}`).then(\r\n            (response) => {\r\n                console.log(response);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n    onGridReady = (params) => {\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        this.setState({\r\n            currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n            getPageSize: this.gridApi.paginationGetPageSize(),\r\n            totalPages: this.gridApi.paginationGetTotalPages(),\r\n        });\r\n    };\r\n\r\n    updateSearchQuery = (val) => {\r\n        this.gridApi.setQuickFilter(val);\r\n    };\r\n\r\n    filterSize = (val) => {\r\n        if (this.gridApi) {\r\n            this.gridApi.paginationSetPageSize(Number(val));\r\n            this.setState({\r\n                currenPageSize: val,\r\n                getPageSize: val,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { rowData, columnDefs, defaultColDef } = this.state;\r\n        return (\r\n            console.log(rowData),\r\n            (\r\n                <Row className=\"app-user-list\">\r\n                    <Col sm=\"12\"></Col>\r\n                    <Col sm=\"12\">\r\n                        <Card>\r\n                            <Row className=\"m-2\">\r\n                                <Col>\r\n                                    <h1 sm=\"6\" className=\"float-left\">\r\n                                        Blog List\r\n                                    </h1>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Route\r\n                                        render={({ history }) => (\r\n                                            <Button\r\n                                                className=\"btn btn-success float-right\"\r\n                                                onClick={() =>\r\n                                                    history.push(\"/app/brahmaand/blogs/addBlog\")\r\n                                                }\r\n                                            >\r\n                                                Add Blog\r\n                                            </Button>\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <CardBody>\r\n                                {this.state.rowData === null ? null : (\r\n                                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                                        <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                                            <div className=\"mb-1\">\r\n                                                <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                                                    <DropdownToggle tag=\"div\">\r\n                                                        {this.gridApi\r\n                                                            ? this.state.currenPageSize\r\n                                                            : \"\" * this.state.getPageSize -\r\n                                                            (this.state.getPageSize - 1)}{\" \"}\r\n                                                        -{\" \"}\r\n                                                        {this.state.rowData.length -\r\n                                                            this.state.currenPageSize *\r\n                                                            this.state.getPageSize >\r\n                                                            0\r\n                                                            ? this.state.currenPageSize *\r\n                                                            this.state.getPageSize\r\n                                                            : this.state.rowData.length}{\" \"}\r\n                                                        of {this.state.rowData.length}\r\n                                                        <ChevronDown className=\"ml-50\" size={15} />\r\n                                                    </DropdownToggle>\r\n                                                    <DropdownMenu right>\r\n                                                        <DropdownItem\r\n                                                            tag=\"div\"\r\n                                                            onClick={() => this.filterSize(20)}\r\n                                                        >\r\n                                                            20\r\n                                                        </DropdownItem>\r\n                                                        <DropdownItem\r\n                                                            tag=\"div\"\r\n                                                            onClick={() => this.filterSize(50)}\r\n                                                        >\r\n                                                            50\r\n                                                        </DropdownItem>\r\n                                                        <DropdownItem\r\n                                                            tag=\"div\"\r\n                                                            onClick={() => this.filterSize(100)}\r\n                                                        >\r\n                                                            100\r\n                                                        </DropdownItem>\r\n                                                        <DropdownItem\r\n                                                            tag=\"div\"\r\n                                                            onClick={() => this.filterSize(134)}\r\n                                                        >\r\n                                                            134\r\n                                                        </DropdownItem>\r\n                                                    </DropdownMenu>\r\n                                                </UncontrolledDropdown>\r\n                                            </div>\r\n                                            <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                                                <div className=\"table-input mr-1\">\r\n                                                    <Input\r\n                                                        placeholder=\"search...\"\r\n                                                        onChange={(e) =>\r\n                                                            this.updateSearchQuery(e.target.value)\r\n                                                        }\r\n                                                        value={this.state.value}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"export-btn\">\r\n                                                    <Button.Ripple\r\n                                                        color=\"primary\"\r\n                                                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                                                    >\r\n                                                        Export as CSV\r\n                                                    </Button.Ripple>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <ContextLayout.Consumer>\r\n                                            {(context) => (\r\n                                                <AgGridReact\r\n                                                    gridOptions={{}}\r\n                                                    rowSelection=\"multiple\"\r\n                                                    defaultColDef={defaultColDef}\r\n                                                    columnDefs={columnDefs}\r\n                                                    rowData={rowData}\r\n                                                    onGridReady={this.onGridReady}\r\n                                                    colResizeDefault={\"shift\"}\r\n                                                    animateRows={true}\r\n                                                    floatingFilter={false}\r\n                                                    pagination={true}\r\n                                                    paginationPageSize={this.state.paginationPageSize}\r\n                                                    pivotPanelShow=\"always\"\r\n                                                    enableRtl={context.state.direction === \"rtl\"}\r\n                                                />\r\n                                            )}\r\n                                        </ContextLayout.Consumer>\r\n                                    </div>\r\n                                )}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        );\r\n    }\r\n}\r\nexport default Blogs;\r\n"],"sourceRoot":""}